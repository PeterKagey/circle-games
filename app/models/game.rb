class Game < ActiveRecord::Base

  belongs_to :high_score
  before_save :simp_sol
  after_save :update_high_score
  attr_accessor :alec

  def high_score
    begin
      HighScore.find(level)
    rescue ActiveRecord::RecordNotFound
      HighScore.create(id:level, level:level)
    end
  end

  def update_high_score
    hs = high_score
    if hs.best_score.nil? || self.vertices <= hs.best_score
      hs.update(best_score: self.vertices, best_game_id: self.id, level: self.level)
    end
  end

  def simplify_solution(solution_string, max_a, max_b, sa, sb) # fix start_a and start_b when updating
    solution_ary = solution_string.split(",").map(&:to_i)
    a = max_a.to_i; b = max_b.to_i
    rows_removed = []; columns_removed = []

    for i in (0...solution_ary.length)
      start_a = i % a
      start_b = i / a
      break if solution_ary[i] > 0
    end

    solution_ary.each_slice(a){|s| s.sum != 0 ? rows_removed << s : b -= 1}
    rows_removed.transpose.each{|s| s.sum != 0 ? columns_removed << s : a -= 1}
    solution_ary = columns_removed.transpose.flatten
    solution_ary.each{|e| e == 0 ? start_a -= 1 : break}
    solution_string = solution_ary.join(",")
    if solution_string.blank?
      a = 1; b = 1; start_a = 0; start_b = 0
    end
    { 
      :solution => solution_string, 
      :new_a => a, 
      :new_b => b, 
      :start_a => sa.blank? ? start_a : sa.to_i, 
      :start_b => sb.blank? ? start_b : sb.to_i
    }
  end

  def simp_sol
    update = simplify_solution(self.solution, self.max_a.to_i, self.max_b.to_i, self.start_a, self.start_b)
    self.solution = update[:solution]
    self.max_a = update[:new_a]
    self.max_b = update[:new_b]
    self.start_a = update[:start_a]
    self.start_b = update[:start_b]
  end

  def self.string_to_text(string, a_width)
    ary = string.split(",")
    max_string_length = ary.map{|x| x.length}.max
    m = "%#{max_string_length}.#{max_string_length}s"
    new_string = ""
    ary.each_slice(a_width) do |s|
      new_string += s.map{|x| m % (x == "0" ? "" : x)}.join(" ") + "\n"
    end
    new_string
  end

  def self.peteys_little_special_function(n)
    seq = [0]
    k = a = 0
    (1..n).to_a.each do |i| 
      2.times do
        k.times do 
          a+=2
          seq << a
        end
        a += 1
        seq << a
      end
      k += 1
    end
    return seq
  end

  def self.a123663
    [0, 1, 2, 4, 5, 7, 8, 10, 12, 13, 15, 17, 18, 20, 22, 24, 25, 27, 29, 31, 32, 34, 36, 38, 40, 41, 43, 45, 47, 49, 50, 52, 54, 56, 58, 60, 61, 63, 65, 67, 69, 71, 72, 74, 76, 78, 80, 82, 84, 85, 87, 89, 91, 93, 95, 97, 98, 100, 102, 104, 106, 108, 110, 112, 113, 115, 117, 119, 121, 123, 125, 127, 128, 130, 132, 134, 136, 138, 140, 142, 144, 145, 147, 149, 151, 153, 155, 157, 159, 161, 162, 164, 166, 168, 170, 172, 174, 176, 178, 180, 181, 183, 185, 187, 189, 191, 193, 195, 197, 199, 200, 202, 204, 206, 208, 210, 212, 214, 216, 218, 220, 221, 223, 225, 227, 229, 231, 233, 235, 237, 239, 241, 242, 244, 246, 248, 250, 252, 254, 256, 258, 260, 262, 264, 265, 267, 269, 271, 273, 275, 277, 279, 281, 283, 285, 287, 288, 290, 292, 294, 296, 298, 300, 302, 304, 306, 308, 310, 312, 313, 315, 317, 319, 321, 323, 325, 327, 329, 331, 333, 335, 337, 338, 340, 342, 344, 346, 348, 350, 352, 354, 356, 358, 360, 362, 364, 365, 367, 369, 371, 373, 375, 377, 379, 381, 383, 385, 387, 389, 391, 392, 394, 396, 398, 400, 402, 404, 406, 408, 410, 412, 414, 416, 418, 420, 421, 423, 425, 427, 429, 431, 433, 435, 437, 439, 441, 443, 445, 447, 449, 450, 452, 454, 456, 458, 460, 462, 464, 466, 468, 470, 472, 474, 476, 478, 480, 481, 483, 485, 487, 489, 491, 493, 495, 497, 499, 501, 503, 505, 507, 509, 511, 512, 514, 516, 518, 520, 522, 524, 526, 528, 530, 532, 534, 536, 538, 540, 542, 544, 545, 547, 549, 551, 553, 555, 557, 559, 561, 563, 565, 567, 569, 571, 573, 575, 577, 578, 580, 582, 584, 586, 588, 590, 592, 594, 596, 598, 600, 602, 604, 606, 608, 610, 612, 613, 615, 617, 619, 621, 623, 625, 627, 629, 631, 633, 635, 637, 639, 641, 643, 645, 647, 648, 650, 652, 654, 656, 658, 660, 662, 664, 666, 668, 670, 672, 674, 676, 678, 680, 682, 684, 685, 687, 689, 691, 693, 695, 697, 699, 701, 703, 705, 707, 709, 711, 713, 715, 717, 719, 721, 722, 724, 726, 728, 730, 732, 734, 736, 738, 740, 742, 744, 746, 748, 750, 752, 754, 756, 758, 760, 761, 763, 765, 767, 769, 771, 773, 775, 777, 779, 781, 783, 785, 787, 789, 791, 793, 795, 797, 799, 800, 802, 804, 806, 808, 810, 812, 814, 816, 818, 820, 822, 824, 826, 828, 830, 832, 834, 836, 838, 840, 841, 843, 845, 847, 849, 851, 853, 855, 857, 859, 861, 863, 865, 867, 869, 871, 873, 875, 877, 879, 881, 882, 884, 886, 888, 890, 892, 894, 896, 898, 900, 902, 904, 906, 908, 910, 912, 914, 916, 918, 920, 922, 924, 925, 927, 929, 931, 933, 935, 937, 939, 941, 943, 945, 947, 949, 951, 953, 955, 957, 959, 961, 963, 965, 967, 968, 970, 972, 974, 976, 978, 980, 982, 984, 986, 988, 990, 992, 994, 996, 998, 1000, 1002, 1004, 1006, 1008, 1010, 1012, 1013, 1015, 1017, 1019, 1021, 1023, 1025, 1027, 1029, 1031, 1033, 1035, 1037, 1039, 1041, 1043, 1045, 1047, 1049, 1051, 1053, 1055, 1057, 1058, 1060, 1062, 1064, 1066, 1068, 1070, 1072, 1074, 1076, 1078, 1080, 1082, 1084, 1086, 1088, 1090, 1092, 1094, 1096, 1098, 1100, 1102, 1104, 1105, 1107, 1109, 1111, 1113, 1115, 1117, 1119, 1121, 1123, 1125, 1127, 1129, 1131, 1133, 1135, 1137, 1139, 1141, 1143, 1145, 1147, 1149, 1151, 1152, 1154, 1156, 1158, 1160, 1162, 1164, 1166, 1168, 1170, 1172, 1174, 1176, 1178, 1180, 1182, 1184, 1186, 1188, 1190, 1192, 1194, 1196, 1198, 1200, 1201, 1203, 1205, 1207, 1209, 1211, 1213, 1215, 1217, 1219, 1221, 1223, 1225, 1227, 1229, 1231, 1233, 1235, 1237, 1239, 1241, 1243, 1245, 1247, 1249, 1250, 1252, 1254, 1256, 1258, 1260, 1262, 1264, 1266, 1268, 1270, 1272, 1274, 1276, 1278, 1280, 1282, 1284, 1286, 1288, 1290, 1292, 1294, 1296, 1298, 1300, 1301, 1303, 1305, 1307, 1309, 1311, 1313, 1315, 1317, 1319, 1321, 1323, 1325, 1327, 1329, 1331, 1333, 1335, 1337, 1339, 1341, 1343, 1345, 1347, 1349, 1351, 1352, 1354, 1356, 1358, 1360, 1362, 1364, 1366, 1368, 1370, 1372, 1374, 1376, 1378, 1380, 1382, 1384, 1386, 1388, 1390, 1392, 1394, 1396, 1398, 1400, 1402, 1404, 1405, 1407, 1409, 1411, 1413, 1415, 1417, 1419, 1421, 1423, 1425, 1427, 1429, 1431, 1433, 1435, 1437, 1439, 1441, 1443, 1445, 1447, 1449, 1451, 1453, 1455, 1457, 1458, 1460, 1462, 1464, 1466, 1468, 1470, 1472, 1474, 1476, 1478, 1480, 1482, 1484, 1486, 1488, 1490, 1492, 1494, 1496, 1498, 1500, 1502, 1504, 1506, 1508, 1510, 1512, 1513, 1515, 1517, 1519, 1521, 1523, 1525, 1527, 1529, 1531, 1533, 1535, 1537, 1539, 1541, 1543, 1545, 1547, 1549, 1551, 1553, 1555, 1557, 1559, 1561, 1563, 1565, 1567, 1568, 1570, 1572, 1574, 1576, 1578, 1580, 1582, 1584, 1586, 1588, 1590, 1592, 1594, 1596, 1598, 1600, 1602, 1604, 1606, 1608, 1610, 1612, 1614, 1616, 1618, 1620, 1622, 1624, 1625, 1627, 1629, 1631, 1633, 1635, 1637, 1639, 1641, 1643, 1645, 1647, 1649, 1651, 1653, 1655, 1657, 1659, 1661, 1663, 1665, 1667, 1669, 1671, 1673, 1675, 1677, 1679, 1681, 1682, 1684, 1686, 1688, 1690, 1692, 1694, 1696, 1698, 1700, 1702, 1704, 1706, 1708, 1710, 1712, 1714, 1716, 1718, 1720, 1722, 1724, 1726, 1728, 1730, 1732, 1734, 1736, 1738, 1740, 1741, 1743, 1745, 1747, 1749, 1751, 1753, 1755, 1757, 1759, 1761, 1763, 1765, 1767, 1769, 1771, 1773, 1775, 1777, 1779, 1781, 1783, 1785, 1787, 1789, 1791, 1793, 1795, 1797, 1799, 1800, 1802, 1804, 1806, 1808, 1810, 1812, 1814, 1816, 1818, 1820, 1822, 1824, 1826, 1828, 1830, 1832, 1834, 1836, 1838, 1840, 1842, 1844, 1846, 1848, 1850, 1852, 1854, 1856, 1858, 1860, 1861, 1863, 1865, 1867, 1869, 1871, 1873, 1875, 1877, 1879, 1881, 1883, 1885, 1887, 1889, 1891, 1893, 1895, 1897, 1899, 1901, 1903, 1905, 1907, 1909, 1911, 1913, 1915, 1917, 1919, 1921, 1922, 1924, 1926, 1928, 1930, 1932, 1934, 1936]
  end
end
